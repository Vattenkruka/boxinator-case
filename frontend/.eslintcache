[{"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\admin\\AdminPage.js":"1","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\admin\\userdetails\\EditUserModal.js":"2","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\index.js":"3","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\components\\hoc\\PrivateRoute.js":"4","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\api\\user.js":"5","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\index.js":"6","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\country\\CountryPage.js":"7","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\App.js":"8","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\login\\LoginPage.js":"9","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\unAuthorized\\UnAuthorizedPage.js":"10","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\components\\modal\\RegisterModal.js":"11","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\shipment\\components\\ColorPicker.js":"12"},{"size":1891,"mtime":1608192435663,"results":"13","hashOfConfig":"14"},{"size":8806,"mtime":1608192435671,"results":"15","hashOfConfig":"14"},{"size":319,"mtime":1607432575531,"results":"16","hashOfConfig":"14"},{"size":1292,"mtime":1607432575524,"results":"17","hashOfConfig":"14"},{"size":1420,"mtime":1608192435656,"results":"18","hashOfConfig":"14"},{"size":437,"mtime":1607432575537,"results":"19","hashOfConfig":"14"},{"size":5494,"mtime":1608192133676,"results":"20","hashOfConfig":"14"},{"size":1484,"mtime":1608192435653,"results":"21","hashOfConfig":"14"},{"size":3472,"mtime":1608192435673,"results":"22","hashOfConfig":"14"},{"size":575,"mtime":1607432575547,"results":"23","hashOfConfig":"14"},{"size":7971,"mtime":1607535540789,"results":"24","hashOfConfig":"14"},{"size":1277,"mtime":1608192435678,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1r4qc3s",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\admin\\AdminPage.js",["56","57"],"import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { useAuth } from \"../../context/auth\";\r\nimport PrivateLayout from \"../../layouts/PrivateLayout\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getAllCountries } from \"../../api/countries\";\r\nimport { checkToken } from \"../../api/user\";\r\nimport UserDetails from \"./UserDetails\";\r\n\r\n/**\r\n * hämta alla shipments från backend, skicka med firebase token\r\n * annars ska det ej funka, testa i postman också sen..\r\n *\r\n * Skapa switch route + komponenter /admin-dashboard/countries etc, med valen i sidebar\r\n * som ska navigera dit..\r\n */\r\n\r\nconst AdminPage = () => {\r\n  const auth = useAuth();\r\n  const [data, setData] = useState(null);\r\n  const [showUsers, setShowUsers] = useState(false);\r\n\r\n  const renderExampleDataWithToken = async () => {\r\n    try {\r\n      const token = await auth.getUserToken();\r\n\r\n      const { data } = await checkToken(token);\r\n\r\n      setData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"CALLED...\");\r\n    renderExampleDataWithToken();\r\n  }, []);\r\n\r\n  const handleUserDetailsClick = (event) => {\r\n    setShowUsers(!showUsers);\r\n  }\r\n\r\n  return (\r\n    <PrivateLayout>\r\n      <div className=\"admin-page\">\r\n        <section className=\"sidebar\">\r\n          <Sidebar getDetails={event => handleUserDetailsClick(event)}/>\r\n        </section>\r\n\r\n        <section className=\"admin-content\">\r\n          {!data ? (\r\n            <div>loading....</div>\r\n          ) : (\r\n            <div>\r\n              Logged in user's email(verified from server via token): {data}\r\n            </div>\r\n          )}\r\n        </section>\r\n        <section>\r\n          {!showUsers ?  \"\" : <UserDetails />}\r\n        </section>\r\n      </div>\r\n    </PrivateLayout>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n",["58","59"],"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\admin\\userdetails\\EditUserModal.js",["60"],"import React, { useState, useEffect } from 'react';\r\nimport Modal from '../../../components/modal/index';\r\nimport { parseISO } from 'date-fns';\r\n\r\nimport \"./../style.scss\";\r\n\r\nimport { useAuth } from \"../../../context/auth\";\r\nimport { ADMIN, USER } from '../../../utils/roles';\r\nimport { updateAccount } from '../../../api/user';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst EditUserModal = (props) => {\r\n\r\n    const auth = useAuth();\r\n    const [showModal, setShowModal] = useState(true);\r\n\r\n    const [dateOfBirth, setDateOfBirth] = useState(new Date()); \r\n    const [editedUser, setEditedUser] = useState({});\r\n    const [invalidInputs, setInvalidInputs] = useState({});\r\n    const [invalidInput, setInvalidInput] = useState(false);\r\n\r\n    useEffect(() => {\r\n        !props.thisUser.dateOfBirth ? setDateOfBirth(new Date()) : setDateOfBirth(parseISO(props.thisUser.dateOfBirth)); // If user does not have a chosen DoB, set a temporary one\r\n    }, [])\r\n\r\n    const updateField = (input, id) => { // ADD VALIDATION TO EACH INPUT, logic is currently messed up\r\n        let regex = \"\";\r\n        if (id === \"firstName\") {\r\n            regex = /^[A-Za-z]+$/;\r\n            if (input.match(regex)) {\r\n                setInvalidInputs(prevState =>({...prevState, fNameVal: true}));\r\n                setEditedUser(prevState => ({...prevState, firstName: input}))\r\n            } else {\r\n                setInvalidInputs(prevState =>({...prevState, fNameVal: false}));\r\n            }\r\n        }\r\n        \r\n        if (id === \"lastName\") {\r\n            regex = /^[A-Za-z]+$/;\r\n            if (input.match(regex)) {\r\n                setInvalidInputs(prevState =>({...prevState, lNameVal: true}));\r\n                setEditedUser(prevState => ({...prevState, lastName: input}))\r\n            } else {\r\n                setInvalidInputs(prevState =>({...prevState, lNameVal: false}));\r\n            }\r\n        }\r\n\r\n        if (id === \"email\") {\r\n            regex = /\\S+@\\S+\\.\\S+/;\r\n            if (input.match(regex)) {\r\n                setInvalidInputs(prevState =>({...prevState, emailVal: true}));\r\n                setEditedUser(prevState => ({...prevState, email: input}))\r\n            } else {\r\n                setInvalidInputs(prevState =>({...prevState, emailVal: false}));\r\n            }\r\n            \r\n        }\r\n\r\n        if (id === \"dateOfBirth\") {\r\n            setDateOfBirth(input);\r\n            setEditedUser(prevState => ({...prevState, dateOfBirth: input}))\r\n        }\r\n\r\n        if (id === \"zipCode\") {\r\n            regex = /^[0-9]/;\r\n            if (input.match(regex)) {\r\n                setInvalidInputs(prevState =>({...prevState, zipVal: true}));\r\n                setEditedUser(prevState => ({...prevState, zipCode: input}))\r\n            } else {\r\n                setInvalidInputs(prevState =>({...prevState, zipVal: false}));\r\n            }\r\n        }\r\n\r\n        if (id === \"country\") {\r\n            setEditedUser(prevState => ({...prevState, country: JSON.parse(input)}))\r\n        }\r\n\r\n        if (id === \"contactNumber\") {\r\n            regex = /^[0-9]/;\r\n            if (input.match(regex)) {\r\n                setInvalidInputs(prevState =>({...prevState, cNumVal: true}));\r\n                setEditedUser(prevState => ({...prevState, contactNumber: input}))\r\n            } else {\r\n                setInvalidInputs(prevState =>({...prevState, cNumVal: true}));\r\n            }\r\n        }\r\n        if (id === \"role\") {\r\n            console.log(input);\r\n            setEditedUser(prevState => ({...prevState, role: input}))\r\n        }\r\n\r\n        if (Object.values(invalidInputs).indexOf(false) > -1) {\r\n            setInvalidInput(true);\r\n            console.log(\"has false\")\r\n        } else {\r\n            setInvalidInput(false);\r\n        }\r\n\r\n    }\r\n\r\n    const handleSaveEditedUser = async () => { // Called when an admin saves changes to an account\r\n        try {\r\n            const token = await auth.getUserToken(); // Get sessiontoken\r\n\r\n            await updateAccount(token, props.thisUser.id, editedUser); // Pass token, pathvariable and body with request\r\n            props.reRender(); // Rerender page\r\n            props.toggleToast(\"saved\");\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setEditedUser([]); // No matter what, editedUser object is reset and popup closed\r\n            setShowModal(!showModal);\r\n        }\r\n        \r\n    }\r\n\r\n    const onClose = () => {\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal isVisible={showModal} onClose={onClose}>\r\n                <h1>{props.thisUser.firstName} {props.thisUser.lastName}</h1>\r\n                \r\n                    <div>\r\n                        <label>Firstname: </label>\r\n                        <input \r\n                        type=\"text\" \r\n                        id=\"firstName\"\r\n                        defaultValue={props.thisUser.firstName}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Lastname: </label>\r\n                        <input \r\n                        type=\"text\" \r\n                        id=\"lastName\"\r\n                        defaultValue={props.thisUser.lastName}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Email: </label>\r\n                        <input \r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        defaultValue={props.thisUser.email}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Date of birth: </label>\r\n                        <DatePicker\r\n                            selected={dateOfBirth}\r\n                            showYearDropdown\r\n                            maxDate={new Date()}\r\n                            placeholderText=\"MM/DD/YYYY\"\r\n                            onChange={(value) => updateField(value, \"dateOfBirth\")}\r\n                            className=\"date-picker\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Zip Code: </label>\r\n                        <input \r\n                        type=\"text\" \r\n                        id=\"zipCode\"\r\n                        maxLength=\"6\"\r\n                        defaultValue={props.thisUser.zipCode}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Country: </label>\r\n                        <select\r\n                            placeholder={props.thisUser.country}\r\n                            options={props.countries}\r\n                            id=\"country\"\r\n                            onChange={(event) => {\r\n                            updateField(event.target.value, event.target.id);\r\n                            }}\r\n                        >\r\n                            {!props.countries ? \"loading...\" :\r\n                            props.countries.map((country, index) => {\r\n                                return <option key={index} value={JSON.stringify(country)}>{country.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label>Contact Number: </label>\r\n                        <input \r\n                        type=\"text\"\r\n                        id=\"contactNumber\"\r\n                        maxLength=\"20\"\r\n                        defaultValue={props.thisUser.contactNumber}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Role: </label>\r\n                        <select\r\n                        placeholder={props.thisUser.role}\r\n                        id=\"role\"\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}>\r\n                            <option value={USER}>USER</option>\r\n                            <option value={ADMIN}>ADMIN</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                <button className=\"btn btn-primary\" disabled={invalidInput ? true : false} onClick={handleSaveEditedUser}>Save</button>\r\n                <button className=\"btn btn-secondary\" onClick={onClose}>Cancel</button>\r\n            </Modal>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default EditUserModal;","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\index.js",[],["61","62"],"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\components\\hoc\\PrivateRoute.js",["63","64","65"],"import React, { useEffect } from \"react\";\r\nimport { Redirect, Route, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../../context/auth\";\r\nimport PageLoader from \"../../components/loader\";\r\nimport { UnAuthorizedPage } from \"../../pages\";\r\n\r\n// component:Component, requiredRoles,...rest\r\nconst PrivateRoute = ({ component: Component, requiredRoles, ...rest }) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const auth = useAuth();\r\n\r\n  useEffect(() => {\r\n    // Redirect if not signed in\r\n    if (auth.user === false) {\r\n      history.replace(\"/login\");\r\n    }\r\n  }, [auth]);\r\n\r\n  if (!auth.user) {\r\n    return <PageLoader />;\r\n  }\r\n\r\n  // kolla om authenticated och kolla om role existerar.\r\n  // om role ej existerar, redirecta beroende på saknad role.\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (auth.user) {\r\n          return requiredRoles.includes(auth.user.role) ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <UnAuthorizedPage {...props} />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n\r\n/**\r\n * const finalComponent = auth.user ? Component : PageLoader;\r\n\r\n  return <Route {...rest} component={finalComponent} />\r\n */\r\n","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\api\\user.js",["66"],"import { USER, ADMIN } from \"../utils/roles\";\r\nimport Api from \"./axios\";\r\n\r\n// Only for testing purposes...\r\nconst getAllAccounts = (token) => {\r\n  return Api.get(\"/account/all\", {\r\n    headers: {\r\n      Authorization: `${token}`,\r\n    },\r\n  });\r\n};\r\n\r\n\r\nconst deleteAccount = (token, account_id) => {\r\n  return Api.delete(\"/account/\"+account_id, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nconst updateAccount = (token, account_id, newUser) => {\r\n  return Api.patch(\"/account/\"+account_id, { ...newUser }, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n}\r\n\r\n\r\nconst checkToken = (token) => {\r\n  return Api.get(\"/accounttest/checktoken\", {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\n// Only for testing purposes...\r\nconst getUserRole = (token) => {\r\n  return Api.get(\"/accounttest/role\", {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\n//{...body, role:USER} instead\r\n\r\nconst createUser = (\r\n  email,\r\n  password,\r\n  firstName,\r\n  lastName,\r\n  dateOfBirth,\r\n  country,\r\n  zipCode,\r\n  contactNumber\r\n) => {\r\n  return Api.post(\"/account/register\", {\r\n    email,\r\n    password,\r\n    firstName,\r\n    lastName,\r\n    dateOfBirth,\r\n    country,\r\n    zipCode,\r\n    contactNumber,\r\n    role: USER,\r\n  });\r\n};\r\n\r\nexport { getAllAccounts, updateAccount, deleteAccount, createUser, checkToken, getUserRole };\r\n","C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\index.js",[],"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\country\\CountryPage.js",["67"],"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\App.js",["68"],"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\login\\LoginPage.js",["69","70","71","72","73"],"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\unAuthorized\\UnAuthorizedPage.js",["74"],"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\components\\modal\\RegisterModal.js",["75","76","77"],"C:\\Users\\pkarim\\Java\\boxinator-case\\frontend\\src\\pages\\shipment\\components\\ColorPicker.js",[],{"ruleId":"78","severity":1,"message":"79","line":8,"column":10,"nodeType":"80","messageId":"81","endLine":8,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":40,"column":6,"nodeType":"84","endLine":40,"endColumn":8,"suggestions":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"82","severity":1,"message":"90","line":24,"column":8,"nodeType":"84","endLine":24,"endColumn":10,"suggestions":"91"},{"ruleId":"86","replacedBy":"92"},{"ruleId":"88","replacedBy":"93"},{"ruleId":"78","severity":1,"message":"94","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":18},{"ruleId":"78","severity":1,"message":"95","line":10,"column":9,"nodeType":"80","messageId":"81","endLine":10,"endColumn":17},{"ruleId":"82","severity":1,"message":"96","line":19,"column":6,"nodeType":"84","endLine":19,"endColumn":12,"suggestions":"97"},{"ruleId":"78","severity":1,"message":"98","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":21},{"ruleId":"78","severity":1,"message":"99","line":17,"column":12,"nodeType":"80","messageId":"81","endLine":17,"endColumn":21},{"ruleId":"78","severity":1,"message":"100","line":17,"column":23,"nodeType":"80","messageId":"81","endLine":17,"endColumn":28},{"ruleId":"78","severity":1,"message":"101","line":8,"column":10,"nodeType":"80","messageId":"81","endLine":8,"endColumn":24},{"ruleId":"78","severity":1,"message":"102","line":8,"column":26,"nodeType":"80","messageId":"81","endLine":8,"endColumn":36},{"ruleId":"78","severity":1,"message":"103","line":9,"column":10,"nodeType":"80","messageId":"81","endLine":9,"endColumn":19},{"ruleId":"78","severity":1,"message":"104","line":21,"column":21,"nodeType":"80","messageId":"81","endLine":21,"endColumn":33},{"ruleId":"78","severity":1,"message":"105","line":22,"column":17,"nodeType":"80","messageId":"81","endLine":22,"endColumn":22},{"ruleId":"78","severity":1,"message":"106","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":21},{"ruleId":"78","severity":1,"message":"103","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":19},{"ruleId":"78","severity":1,"message":"107","line":17,"column":9,"nodeType":"80","messageId":"81","endLine":17,"endColumn":20},{"ruleId":"78","severity":1,"message":"108","line":21,"column":7,"nodeType":"80","messageId":"81","endLine":21,"endColumn":22},"no-unused-vars","'getAllCountries' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderExampleDataWithToken'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"React Hook useEffect has a missing dependency: 'props.thisUser.dateOfBirth'. Either include it or remove the dependency array. If 'setDateOfBirth' needs the current value of 'props.thisUser.dateOfBirth', you can also switch to useReducer instead of useState and read 'props.thisUser.dateOfBirth' in the reducer.",["112"],["110"],["111"],"'Redirect' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["113"],"'ADMIN' is defined but never used.","'isLoading' is assigned a value but never used.","'GUEST' is defined but never used.","'getAllAccounts' is defined but never used.","'createUser' is defined but never used.","'useEffect' is defined but never used.","'setIsLoading' is assigned a value but never used.","'login' is assigned a value but never used.","'PrivateLayout' is defined but never used.","'isFirstTime' is assigned a value but never used.","'captchaVerifier' is assigned a value but never used.",{"desc":"114","fix":"115"},"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [renderExampleDataWithToken]",{"range":"120","text":"121"},"Update the dependencies array to be: [props.thisUser.dateOfBirth]",{"range":"122","text":"123"},"Update the dependencies array to be: [auth, history]",{"range":"124","text":"125"},[1158,1160],"[renderExampleDataWithToken]",[958,960],"[props.thisUser.dateOfBirth]",[627,633],"[auth, history]"]