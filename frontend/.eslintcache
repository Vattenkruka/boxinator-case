[{"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\shipment\\components\\CompleteOrder.js":"1","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\index.js":"2","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\shipment\\AddShipmentPage.js":"3","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\login\\LoginPage.js":"4","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\notFound\\NotFoundPage.js":"5","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\unAuthorized\\UnAuthorizedPage.js":"6","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\register\\RegisterPage.js":"7","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\navbar\\index.js":"8","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\loader\\index.js":"9","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\api\\countries.js":"10","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\admin\\UserDetails.js":"11","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\layouts\\PublicLayout.js":"12","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\modal\\RegisterModal.js":"13","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\modal\\useClickOutside.js":"14","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\shipment\\components\\ColorPicker.js":"15","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\admin\\AdminPage.js":"16","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\shipment\\components\\ShipmentForm.js":"17","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\modal\\LoginModal.js":"18","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\admin\\HandleShipmentsPage.js":"19","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\modal\\index.js":"20","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\admin\\EditShipmentModal.js":"21","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\layouts\\PrivateLayout.js":"22","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\api\\axios.js":"23","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\api\\shipments.js":"24","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\App.js":"25"},{"size":780,"mtime":1608028495448,"results":"26","hashOfConfig":"27"},{"size":319,"mtime":1607347429050,"results":"28","hashOfConfig":"27"},{"size":2928,"mtime":1608028495448,"results":"29","hashOfConfig":"27"},{"size":3472,"mtime":1608028495446,"results":"30","hashOfConfig":"27"},{"size":378,"mtime":1607347429054,"results":"31","hashOfConfig":"27"},{"size":575,"mtime":1607347429056,"results":"32","hashOfConfig":"27"},{"size":8656,"mtime":1608028495447,"results":"33","hashOfConfig":"27"},{"size":930,"mtime":1608028495442,"results":"34","hashOfConfig":"27"},{"size":316,"mtime":1607347429048,"results":"35","hashOfConfig":"27"},{"size":147,"mtime":1608028495438,"results":"36","hashOfConfig":"27"},{"size":10374,"mtime":1608028495444,"results":"37","hashOfConfig":"27"},{"size":264,"mtime":1607347429051,"results":"38","hashOfConfig":"27"},{"size":7971,"mtime":1608028495440,"results":"39","hashOfConfig":"27"},{"size":495,"mtime":1608028495441,"results":"40","hashOfConfig":"27"},{"size":1277,"mtime":1608028495448,"results":"41","hashOfConfig":"27"},{"size":1891,"mtime":1608028495444,"results":"42","hashOfConfig":"27"},{"size":3121,"mtime":1608028495449,"results":"43","hashOfConfig":"27"},{"size":3587,"mtime":1608028495439,"results":"44","hashOfConfig":"27"},{"size":2920,"mtime":1608281617919,"results":"45","hashOfConfig":"27"},{"size":507,"mtime":1608028495440,"results":"46","hashOfConfig":"27"},{"size":3711,"mtime":1608281441740,"results":"47","hashOfConfig":"27"},{"size":244,"mtime":1607347429051,"results":"48","hashOfConfig":"27"},{"size":109,"mtime":1607347429046,"results":"49","hashOfConfig":"27"},{"size":442,"mtime":1608028495438,"results":"50","hashOfConfig":"27"},{"size":1300,"mtime":1608028495438,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1tb9m81",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\shipment\\components\\CompleteOrder.js",[],["115","116"],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\index.js",[],["117","118"],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\shipment\\AddShipmentPage.js",[],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\login\\LoginPage.js",["119","120","121","122","123"],"import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport PublicLayout from \"../../layouts/PublicLayout\";\r\nimport { getAllAccounts, createUser } from \"../../api/user\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../../context/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { ADMIN, USER } from \"../../utils/roles\";\r\nimport PageLoader from \"../../components/loader\";\r\n\r\nimport firebase from \"../../context/firebase\";\r\nimport Modal from \"../../components/modal/LoginModal\";\r\nimport { useRef } from \"react\";\r\n\r\nconst LoginPage = ({ history }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { user, login } = useAuth();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const resolverRef = useRef();\r\n\r\n  const handleLogin = async (e) => {\r\n    // setIsLoading(true);\r\n\r\n    try {\r\n      await firebase.auth().signInWithEmailAndPassword(email, password);\r\n\r\n      alert(\"User without 2 factor not allowed....\");\r\n    } catch (error) {\r\n      if (error.code === \"auth/wrong-password\") {\r\n        //....\r\n        setErrorMessage(\"Could not login: \" + error.code);\r\n      }\r\n\r\n      if (error.code === \"auth/multi-factor-auth-required\") {\r\n        // The user is enrolled in MFA, must be verified\r\n        resolverRef.current = error.resolver;\r\n        setShowModal(true);\r\n      }\r\n    } finally {\r\n      //setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (user === null || isLoading) {\r\n    return <PageLoader />;\r\n  }\r\n\r\n  if (user && user.role === ADMIN) {\r\n    return <Redirect to=\"/admin-dashboard\" />;\r\n  }\r\n  if (user && user.role === USER) {\r\n    return <Redirect to=\"/add-shipment\" />;\r\n  }\r\n\r\n  return (\r\n    <PublicLayout>\r\n      {showModal && (\r\n        <Modal\r\n          firebase={firebase}\r\n          resolver={resolverRef.current}\r\n          onClose={() => {\r\n            setShowModal(false);\r\n          }}\r\n        ></Modal>\r\n      )}\r\n\r\n      <div className=\"login\">\r\n        {errorMessage}\r\n\r\n        <div className=\"form\">\r\n          <div className=\"custom-form-group\">\r\n            <label className=\"label\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              className=\"input\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            ></input>\r\n\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </div>\r\n\r\n          <div className=\"custom-form-group\">\r\n            <label className=\"label\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"input\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <Button\r\n            className=\"btn\"\r\n            onClick={handleLogin}\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </PublicLayout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\notFound\\NotFoundPage.js",["124"],"import React from \"react\";\r\nimport Publiclayout from \"../../layouts/PublicLayout\";\r\nimport PrivateLayout from \"../../layouts/PrivateLayout\";\r\n\r\nconst NotFoundPage = () => {\r\n  // if user, return now found with privateLayout, otherwise publiclayout-\r\n\r\n  return (\r\n    <Publiclayout>\r\n      <div>NotFoundPage</div>\r\n    </Publiclayout>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\unAuthorized\\UnAuthorizedPage.js",["125"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Publiclayout from \"../../layouts/PublicLayout\";\r\nimport PrivateLayout from \"../../layouts/PrivateLayout\";\r\n\r\nconst UnAuthorizedPage = ({ history }) => {\r\n  // if user, return now found with privateLayout, otherwise publiclayout-\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      history.replace(\"/\");\r\n    }, 1000);\r\n  }, [history]);\r\n\r\n  return (\r\n    <Publiclayout>\r\n      <div>UnAuthorizedPage - You will be redirected ...</div>\r\n    </Publiclayout>\r\n  );\r\n};\r\n\r\nexport default UnAuthorizedPage;\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\register\\RegisterPage.js",["126","127","128","129","130"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Select, { components } from \"react-select\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport \"./style.scss\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport PublicLayout from \"../../layouts/PublicLayout\";\r\nimport { useEffect } from \"react\";\r\nimport PageLoader from \"../../components/loader\";\r\nimport { getAllCountries } from \"../../api/countries\";\r\nimport { useAuth } from \"../../context/auth\";\r\nimport { ADMIN, GUEST, USER } from \"../../utils/roles\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createUser } from \"../../api/user\";\r\n\r\nimport firebase from \"../../context/firebase\";\r\nimport { useRef } from \"react\";\r\nimport Modal from \"../../components/modal/RegisterModal\";\r\nvar appVerifier = null;\r\n\r\nconst { Option } = components;\r\nconst IconOption = (props) => (\r\n  <Option {...props}>Ikonhär -{props.data.label}</Option>\r\n);\r\n\r\nconst RegisterPage = ({ history }) => {\r\n  // Make a component out of the country selecter and have\r\n  // isLoding only there.\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [contactNumber, setContactNumber] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [dateOfBirth, setDateOfBirth] = useState(new Date());\r\n  const [country, setCountry] = useState(\"\");\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  const { user, register, reloadUser, deleteUser } = useAuth();\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  /*\r\n  const handleChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };*/\r\n\r\n  // password should not be sent as it is already saved in firebase\r\n  // however, uuid for user should be send and work as unique identifier in account table.\r\n\r\n  /**\r\n   * TA HÄNSYN TILL när användaren signar upp och \"avbryter\" vid 2 factorerings delen\r\n   * han ska ej få kunna logga in (kanske en check som emailVerified, mutlifactor.något)\r\n   * men även att användaren tas bort eller något ifall detta sker så man kan re-signa med\r\n   * samma email.\r\n   */\r\n\r\n  const handleRegistration = async () => {\r\n    try {\r\n      const user = await register(email, password);\r\n\r\n      alert(\r\n        \"You need to enroll with 2-factor authentication! Verify your email before adding your number.\"\r\n      );\r\n\r\n      setShowModal(true);\r\n    } catch (error) {\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        console.log(\"That email address is already in use!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      let response = await getAllCountries();\r\n      let { data: savedCountries } = response.data;\r\n\r\n      savedCountries = savedCountries.map((obj) => {\r\n        return {\r\n          label: obj.name,\r\n          value: obj.name,\r\n          feeMultiplier: obj.feeMultiplier,\r\n        };\r\n      });\r\n\r\n      setCountries(savedCountries);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const onSuccess = async () => {\r\n    try {\r\n      await createUser(\r\n        email,\r\n        password,\r\n        firstName,\r\n        lastName,\r\n        dateOfBirth,\r\n        country,\r\n        zipCode,\r\n        contactNumber\r\n      );\r\n      await reloadUser();\r\n\r\n      history.replace(\"/add-shipment\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      deleteUser();\r\n    }\r\n  };\r\n\r\n  // If user is null it means we are still fetching him/her\r\n  // Therefore, show a loading spinner.\r\n  if (user === null) {\r\n    return <PageLoader />;\r\n  }\r\n\r\n  // If we already have a user logged in, it is not\r\n  // neccessary to show this page, redirect to another\r\n  // page depending on the role.\r\n  if (user && user.role === ADMIN) {\r\n    return <Redirect to=\"/admin-dashboard\" />;\r\n  }\r\n  if (user && user.role === USER) {\r\n    return <Redirect to=\"/add-shipment\" />;\r\n  }\r\n\r\n  return (\r\n    <PublicLayout>\r\n      {showModal && (\r\n        <Modal\r\n          onSuccess={onSuccess}\r\n          firebase={firebase}\r\n          initialNumber={contactNumber}\r\n          onClose={() => {\r\n            setShowModal(false);\r\n          }}\r\n        ></Modal>\r\n      )}\r\n\r\n      {isloading ? (\r\n        <PageLoader />\r\n      ) : (\r\n        <div className=\"register\">\r\n          <div className=\"register-form-group half-width\">\r\n            <label className=\"label\">Firstname</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Firstname\"\r\n              className=\"input\"\r\n              value={firstName}\r\n              onChange={(e) => {\r\n                setFirstName(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n          <div className=\"register-form-group half-width\">\r\n            <label className=\"label\">Lastname</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Lastname\"\r\n              className=\"input\"\r\n              value={lastName}\r\n              onChange={(e) => {\r\n                setLastName(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"register-form-group full-width\">\r\n            <label className=\"label\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              className=\"input\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"register-form-group half-width\">\r\n            <label className=\"label\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"input\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"register-form-group half-width\">\r\n            <label className=\"label\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              className=\"input\"\r\n              value={confirmPassword}\r\n              onChange={(e) => {\r\n                setConfirmPassword(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"register-form-group half-width\">\r\n            <label className=\"label\">Phone number</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Phone number\"\r\n              className=\"input\"\r\n              value={contactNumber}\r\n              onChange={(e) => {\r\n                setContactNumber(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"register-form-group half-width\">\r\n            <label className=\"label\">Date of birth</label>\r\n            <DatePicker\r\n              selected={dateOfBirth}\r\n              showYearDropdown\r\n              maxDate={new Date()}\r\n              placeholderText=\"MM/DD/YYYY\"\r\n              onChange={(date) => setDateOfBirth(date)}\r\n              className=\"input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"register-form-group half-width\">\r\n            <label className=\"label\">Country</label>\r\n            <Select\r\n              className=\"select-picker\"\r\n              placeholder={\"Select country\"}\r\n              options={countries}\r\n              components={{ Option: IconOption }}\r\n              onChange={(e) => {\r\n                setCountry(e.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"register-form-group half-width\">\r\n            <label className=\"label\">Zip code</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Zip code\"\r\n              className=\"input\"\r\n              value={zipCode}\r\n              onChange={(e) => {\r\n                setZipCode(e.target.value);\r\n              }}\r\n            ></input>\r\n          </div>\r\n\r\n          <Button\r\n            className=\"btn register-button\"\r\n            onClick={handleRegistration}\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </PublicLayout>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\navbar\\index.js",["131"],"import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ADMIN, USER, GUEST } from \"../../utils/roles\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useAuth } from \"../../context/auth\";\r\n\r\nconst Navbar = () => {\r\n  const location = useLocation();\r\n  const auth = useAuth();\r\n\r\n  useEffect(() => {}, [auth.user, location]);\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      {auth.user && (auth.user.role === ADMIN || auth.user.role === USER) ? (\r\n        <>\r\n          <Link to=\"/add-shipment\">Add Shipment</Link>\r\n          {(auth.user.role === ADMIN) && ( \r\n            <Link to=\"/admin-dashboard\">Admin Dashboard</Link>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Link to=\"/login\">Login</Link>\r\n          <Link to=\"/register\">Register</Link>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\loader\\index.js",[],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\api\\countries.js",[],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\admin\\UserDetails.js",["132"],"import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { getAllAccounts, updateAccount, deleteAccount } from '../../api/user';\r\nimport DatePicker from 'react-datepicker';\r\nimport { parseISO } from 'date-fns';\r\n\r\nimport \"./style.scss\";\r\n\r\nimport { useAuth } from \"../../context/auth\";\r\nimport { getAllCountries } from '../../api/countries';\r\n\r\n\r\nconst UserDetails = () => {\r\n    const auth = useAuth();\r\n    const [data, setData] = useState(null);\r\n    const [countries, setCountries] = useState([]);\r\n    const [dateOfBirth, setDateOfBirth] = useState(new Date()); \r\n    const [editUserView, setEditUserView] = useState(false);\r\n    const [thisUser, setThisUser] = useState(null);\r\n    const [editedUser, setEditedUser] = useState({});\r\n\r\n    const renderUserDataWithAdminToken = async () => {\r\n        try {\r\n            const token = await auth.getUserToken();\r\n\r\n            const { data } = await getAllAccounts(token); \r\n            \r\n            let { data: savedCountries } = await getAllCountries();\r\n\r\n            savedCountries = savedCountries.data.map((country) => {\r\n                return {\r\n                    name: country.name, \r\n                    code: country.countryCode,\r\n                    feeMulti: country.feeMultiplier\r\n                };\r\n            });\r\n\r\n            setCountries(savedCountries);\r\n            setData(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        renderUserDataWithAdminToken();\r\n    }, [])\r\n\r\n    const handleEditClick = (user) => {\r\n        console.log(\"EDITING\");\r\n        setDateOfBirth(parseISO(user.dateOfBirth));\r\n        setEditUserView(!editUserView);\r\n        setThisUser(user);\r\n    }\r\n\r\n    const handleDeleteClick = async (user) => {\r\n        let confirm = prompt(\"Are you sure you want to delete the account with id: \"\r\n        +user.id+\"?\\nProvide this phrase to confirm delete: \"+user.email, \"\");\r\n\r\n        if (confirm !== user.email) {\r\n            alert(\"Incorrect confirmation credentials provided. Try again.\");\r\n        } else {\r\n            try {\r\n                const token = await auth.getUserToken();\r\n\r\n                await deleteAccount(token, user.id); // NOT WORKING (object is not a function??)\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n            console.log(\"DELETE\"); // DELETE FROM FIREBASE AND SEND API REQUEST\r\n        }\r\n    }\r\n\r\n    const updateField = (input, id) => {\r\n        if (id === \"firstName\") {\r\n            setEditedUser(prevState => ({...prevState, firstName: input}))\r\n        }\r\n        \r\n        if (id === \"lastName\") {\r\n            setEditedUser(prevState => ({...prevState, lastName: input}))\r\n        }\r\n\r\n        if (id === \"email\") {\r\n            setEditedUser(prevState => ({...prevState, email: input}))\r\n        }\r\n\r\n        if (id === \"dateOfBirth\") {\r\n            setDateOfBirth(input);\r\n            setEditedUser(prevState => ({...prevState, dateOfBirth: input}))\r\n        }\r\n\r\n        if (id === \"zipCode\") {\r\n            setEditedUser(prevState => ({...prevState, zipCode: input}))\r\n        }\r\n\r\n        if (id === \"country\") {\r\n            setEditedUser(prevState => ({...prevState, country: JSON.parse(input)}))\r\n        }\r\n\r\n        if (id === \"contactNumber\") {\r\n            setEditedUser(prevState => ({...prevState, contactNumber: input}))\r\n        }\r\n\r\n        if (id === \"role\") {\r\n            setEditedUser(prevState => ({...prevState, role: input}))\r\n        }\r\n        \r\n    }\r\n\r\n    const handleSaveEditedUser = async () => {\r\n        console.log(\"SAVED\");\r\n        try {\r\n            const token = await auth.getUserToken();\r\n\r\n            await updateAccount(token, thisUser.id, editedUser);// EDIT FIREBASE USER AND SEND API REQUEST\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setEditedUser([]);\r\n            setEditUserView(!editUserView);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleCancelEditUserView = () => {\r\n        console.log(\"CANCELLED\");\r\n        setEditedUser([]);\r\n        setEditUserView(!editUserView);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {!data ? (\r\n            <div>loading...</div>\r\n        ) : (\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Date of Birth</th>\r\n                        <th>Zipcode</th>\r\n                        <th>Country of residence</th>\r\n                        <th>Contact number</th>\r\n                        <th>Role</th>\r\n                        <th>Shipments</th>\r\n                        <th>Edit</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.data.map(function(user){\r\n                            return <tr key={user.id}>\r\n                                <td>{user.id}</td>\r\n                                <td>{user.firstName} {user.lastName}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{!user.dateOfBirth ? \"Not defined\" : user.dateOfBirth}</td>\r\n                                <td>{!user.zipCode ? \"Not defined\" : user.zipCode}</td>\r\n                                <td>{!user.country ? \"Not defined\" : user.country}</td>\r\n                                <td>{!user.contactNumber ? \"Not defined\" : user.contactNumber}</td>\r\n                                <td>{user.role}</td>\r\n                                <td className=\"shipments\">{user.shipments}</td>\r\n                                <td className=\"btns\">\r\n                                    <button className=\"btns\" onClick={() => handleEditClick(user)}>Edit </button>\r\n                                    <button className=\"btns\" onClick={() => handleDeleteClick(user)}> Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                    })}\r\n                </tbody> \r\n            </Table>\r\n        )}\r\n        {!editUserView ? \"\" : <div className=\"edit-user-view\">\r\n                <h1>{thisUser.firstName} {thisUser.lastName}</h1>\r\n                <div className=\"dual-inputs\">\r\n                    <div>\r\n                        <label>Firstname: </label><br/>\r\n                        <input \r\n                        type=\"text\" \r\n                        id=\"firstName\"\r\n                        defaultValue={thisUser.firstName}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Lastname: </label><br/>\r\n                        <input \r\n                        type=\"text\" \r\n                        id=\"lastName\"\r\n                        defaultValue={thisUser.lastName}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dual-inputs\">\r\n                    <div>\r\n                        <label>Email: </label><br/>\r\n                        <input \r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        defaultValue={thisUser.email}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Date of birth: </label><br/>\r\n                        \r\n                        <DatePicker\r\n                            selected={dateOfBirth}\r\n                            showYearDropdown\r\n                            maxDate={new Date()}\r\n                            placeholderText=\"MM/DD/YYYY\"\r\n                            onChange={(value) => updateField(value, \"dateOfBirth\")}\r\n                            className=\"date-picker\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"dual-inputs\">\r\n                    <div>\r\n                        <label>Zip Code: </label><br/>\r\n                        <input \r\n                        type=\"text\" \r\n                        id=\"zipCode\"\r\n                        defaultValue={thisUser.zipCode}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Country: </label><br/>\r\n                        <select\r\n                            placeholder={thisUser.country}\r\n                            options={countries}\r\n                            id=\"country\"\r\n                            onChange={(event) => {\r\n                            updateField(event.target.value, event.target.id);\r\n                            }}\r\n                        >\r\n                            {!countries ? \"loading...\" :\r\n                            countries.map((country, index) => {\r\n                                return <option key={index} value={JSON.stringify(country)}>{country.name}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dual-inputs\">\r\n                    <div>\r\n                        <label>Contact Number: </label><br/>\r\n                        <input \r\n                        type=\"text\"\r\n                        id=\"contactNumber\"\r\n                        defaultValue={thisUser.contactNumber}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label>Role: </label><br/>\r\n                        <input \r\n                        type=\"text\"\r\n                        id=\"role\"\r\n                        defaultValue={thisUser.role}\r\n                        onChange={(event) => updateField(event.target.value, event.target.id)}></input>\r\n                    </div>\r\n                </div>\r\n\r\n            <button onClick={handleSaveEditedUser}>Save</button>\r\n            <button onClick={handleCancelEditUserView}>Cancel</button>\r\n        </div>}\r\n    </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserDetails;","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\layouts\\PublicLayout.js",[],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\modal\\RegisterModal.js",["133","134","135"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nimport \"./style.scss\";\r\nimport useClickOuteside from \"./useClickOutside\";\r\n\r\nconst RegisterModal = ({\r\n  children,\r\n  onClose,\r\n  initialNumber,\r\n  firebase,\r\n  onSuccess,\r\n}) => {\r\n  const recaptchaWrapperRef = useRef();\r\n  const modalRef = useRef();\r\n  const isFirstTime = useRef(true);\r\n\r\n  useClickOuteside(modalRef, onClose);\r\n\r\n  let captchaVerifier = useRef();\r\n  const verificationVerifier = useRef();\r\n  const [phoneNbr, setPhoneNbr] = useState(initialNumber ? initialNumber : \"\");\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [showEnterVerificationCode, setEnterVerificationCode] = useState(null);\r\n\r\n  // Hämta användaren, ifall email är un-verified ha loader och i\r\n  // useEffect captchan ha emailNotVerified typ som dependencyn och endast\r\n  // när den verifieras så kör koden.\r\n\r\n  const handleSendPhoneVerification = async () => {\r\n    // In case we have alreay registered, clear the recaptchaVerifier\r\n    // and also re-initialize the div element inside recaptchaWrapperRef.\r\n    // Otherwise we'll get \"Captcha already rendered\" error.\r\n    if (window.recaptchaVerifier && recaptchaWrapperRef) {\r\n      window.recaptchaVerifier.clear();\r\n      recaptchaWrapperRef.current.innerHTML = `<div id=\"recaptcha-container\"></div>`;\r\n    }\r\n\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: function (response) {\r\n          console.log(\"[CAPTCHA RESOLVED]\", response);\r\n        },\r\n      }\r\n    );\r\n\r\n    try {\r\n      /*\r\n      let user = await firebase.auth().currentUser.reload();\r\n\r\n      user = await firebase.auth().currentUser;\r\n\r\n      if (!isFirstTime.current && !user.emailVerified) {\r\n        throw new Error(\"auth/unverified-email\");\r\n      }\r\n\r\n      isFirstTime.current = false;*/\r\n\r\n      const session = await firebase\r\n        .auth()\r\n        .currentUser.multiFactor.getSession();\r\n\r\n      const phoneOpts = {\r\n        phoneNumber: `${phoneNbr}`,\r\n        session,\r\n      };\r\n\r\n      const phoneAuthProvider = new firebase.auth.PhoneAuthProvider();\r\n\r\n      verificationVerifier.current = await phoneAuthProvider.verifyPhoneNumber(\r\n        phoneOpts,\r\n        window.recaptchaVerifier\r\n      );\r\n\r\n      setEnterVerificationCode(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (\r\n        error.code === \"auth/unverified-email\" ||\r\n        error.message === \"auth/unverified-email\"\r\n      ) {\r\n        setErrorMessage(error.code);\r\n      }\r\n\r\n      // handle \"auth/requires-recent-login\", occurs when there is a \"break\" between sending\r\n      // a new verification code\r\n    }\r\n  };\r\n\r\n  const handleVerificationCode = async () => {\r\n    const cred = new firebase.auth.PhoneAuthProvider.credential(\r\n      verificationVerifier.current,\r\n      verificationCode\r\n    );\r\n\r\n    const multiFactorAssertion = firebase.auth.PhoneMultiFactorGenerator.assertion(\r\n      cred\r\n    );\r\n\r\n    const user = firebase.auth().currentUser;\r\n    try {\r\n      await user.multiFactor.enroll(multiFactorAssertion, \"phone number\");\r\n\r\n      alert(\"enrolled in MFA\");\r\n\r\n      onSuccess();\r\n    } catch (error) {\r\n      setErrorMessage(error.code);\r\n    }\r\n  };\r\n\r\n  // notifiera att användaren måste verifiera först innan 2factor\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div ref={modalRef} className=\"custom-modal\">\r\n        <div ref={recaptchaWrapperRef}>\r\n          <div style={{ display: \"none\" }} id=\"recaptcha-container\"></div>\r\n        </div>\r\n\r\n        {errorMessage && (\r\n          <>\r\n            {errorMessage === \"auth/unverified-email\" ? (\r\n              <section\r\n                className=\"resend-code\"\r\n                style={{ width: \"100%\", padding: \"20px\" }}\r\n              >\r\n                <p className=\"error-message\">\r\n                  Did the verification email not work? Try again.\r\n                </p>\r\n\r\n                <button\r\n                  onClick={() => {\r\n                    firebase.auth().currentUser.sendEmailVerification();\r\n                  }}\r\n                >\r\n                  Resend the email\r\n                </button>\r\n              </section>\r\n            ) : (\r\n              <section className=\"resend-code\">\r\n                <p className=\"error-message\">\r\n                  Wrong code entered, please resend and try again!\r\n                </p>\r\n              </section>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {showEnterVerificationCode ? (\r\n          <div>\r\n            <h4>Enter verification code</h4>\r\n            <input\r\n              value={verificationCode}\r\n              onChange={(e) => {\r\n                setVerificationCode(e.target.value);\r\n              }}\r\n            ></input>\r\n            <button\r\n              onClick={() => {\r\n                handleVerificationCode();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n\r\n            <section className=\"resend-code\">\r\n              <p>Resend verification code</p>\r\n              <button\r\n                onClick={() => {\r\n                  setEnterVerificationCode(false);\r\n                  setErrorMessage(null);\r\n                }}\r\n              >\r\n                Resend\r\n              </button>\r\n            </section>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h4>Enter your Phone number</h4>\r\n\r\n            <section>\r\n              {/*\r\n             ha dropdown select inuti (position absolute på span och padding-left: 20px något på input) där man kan välja phoneCode\r\n             <span>+46</span>*/}\r\n\r\n              <input\r\n                placeholder=\"e.g. +46727124185\"\r\n                value={phoneNbr}\r\n                onChange={(e) => {\r\n                  setPhoneNbr(e.target.value);\r\n                }}\r\n              ></input>\r\n            </section>\r\n\r\n            <button\r\n              onClick={() => {\r\n                handleSendPhoneVerification();\r\n              }}\r\n              className=\"btn\"\r\n            >\r\n              Send verification code\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterModal;\r\n/*\r\nconst currentUser = firebase.auth().currentUser;\r\n\r\ncurrentUser.multiFactor\r\n  .getSession()\r\n  .then(function (multiFactorSession) {\r\n    // Specify the phone number and pass the MFA session.\r\n    var phoneInfoOptions = {\r\n      phoneNumber: phoneNumber,\r\n      session: multiFactorSession,\r\n    };\r\n    var phoneAuthProvider = new firebase.auth.PhoneAuthProvider();\r\n    // Send SMS verification code.\r\n    return phoneAuthProvider.verifyPhoneNumber(phoneInfoOptions, appVerifier);\r\n  })\r\n  .then(function (verificationId) {\r\n    // Ask user for the verification code.\r\n    var verificationCode = window.prompt(\r\n      \"Please enter the verification \" +\r\n        \"code that was sent to your mobile device.\"\r\n    );\r\n    var cred = firebase.auth.PhoneAuthProvider.credential(\r\n      verificationId,\r\n      verificationCode\r\n    );\r\n    var multiFactorAssertion = firebase.auth.PhoneMultiFactorGenerator.assertion(\r\n      cred\r\n    );\r\n    // Complete enrollment.\r\n    return currentUser.multiFactor.enroll(multiFactorAssertion);\r\n  });\r\n\r\n\r\nvar provider = new firebase.auth.PhoneAuthProvider();\r\nprovider\r\n  .verifyPhoneNumber(\"+46729266205\", appVerifier)\r\n  .then(function (verificationId) {\r\n    console.log(\"HERERKLDAS\");\r\n\r\n    var verificationCode = window.prompt(\r\n      \"Please enter the verification \" +\r\n        \"code that was sent to your mobile device.\"\r\n    );\r\n    return firebase.auth.PhoneAuthProvider.credential(\r\n      verificationId,\r\n      verificationCode\r\n    );\r\n  })\r\n  .then(function (phoneCredential) {\r\n    return user.updatePhoneNumber(phoneCredential);\r\n  });\r\n} catch (error) {}\r\n*/\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\modal\\useClickOutside.js",["136","137"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nconst useClickOuteside = (ref, onClose) => {\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref, onClose]);\r\n};\r\n\r\nexport default useClickOuteside;\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\shipment\\components\\ColorPicker.js",[],["138","139"],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\admin\\AdminPage.js",["140","141"],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\shipment\\components\\ShipmentForm.js",["142"],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\modal\\LoginModal.js",["143","144","145","146"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nimport \"./style.scss\";\r\nimport Loader from \"../../components/loader\";\r\nimport useClickOuteside from \"./useClickOutside\";\r\n\r\nconst LoginModal = ({ children, onClose, firebase, resolver }) => {\r\n  const recaptchaWrapperRef = useRef();\r\n  const modalRef = useRef();\r\n\r\n  useClickOuteside(modalRef, onClose);\r\n\r\n  let captchaVerifier = useRef();\r\n  const verificationVerifier = useRef();\r\n  const [phoneNbr, setPhoneNbr] = useState(0);\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // sätt captchan som i index.modal\r\n\r\n  useEffect(() => {\r\n    handleSendPhoneVerification();\r\n  }, []);\r\n\r\n  const handleSendPhoneVerification = async () => {\r\n    if (window.recaptchaVerifier && recaptchaWrapperRef) {\r\n      window.recaptchaVerifier.clear();\r\n      recaptchaWrapperRef.current.innerHTML = `<div id=\"recaptcha-container\"></div>`;\r\n    }\r\n\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: function (response) {\r\n          console.log(\"[CAPTCHA RESOLVED]\", response);\r\n        },\r\n      }\r\n    );\r\n\r\n    try {\r\n      const phoneOpts = {\r\n        multiFactorHint: resolver.hints[0],\r\n        session: resolver.session,\r\n      };\r\n\r\n      const phoneAuthProvider = new firebase.auth.PhoneAuthProvider();\r\n\r\n      verificationVerifier.current = await phoneAuthProvider.verifyPhoneNumber(\r\n        phoneOpts,\r\n        window.recaptchaVerifier\r\n      );\r\n\r\n      alert(\"sms text sent!\");\r\n    } catch (error) {\r\n      if (error.code) {\r\n        setErrorMessage(error.code.substring(5));\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVerificationCode = async () => {\r\n    const cred = new firebase.auth.PhoneAuthProvider.credential(\r\n      verificationVerifier.current,\r\n      verificationCode\r\n    );\r\n\r\n    const multiFactorAssertion = firebase.auth.PhoneMultiFactorGenerator.assertion(\r\n      cred\r\n    );\r\n\r\n    // Below makes the user log in automatically (authStateChanged -> handleUser)\r\n    try {\r\n      await resolver.resolveSignIn(multiFactorAssertion);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Ha en loader vid   user.isEmailVerified == null\r\n  // eller notifiera att användaren måste verifiera först innan 2factor\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div ref={modalRef} className=\"custom-modal\">\r\n        <div ref={recaptchaWrapperRef}>\r\n          <div style={{ display: \"none\" }} id=\"recaptcha-container\"></div>\r\n        </div>\r\n        {!isLoading && errorMessage == null ? (\r\n          <div>\r\n            <h4>Enter the verification code that was sent to your Phone</h4>\r\n            <input\r\n              placeholder=\"Verification code\"\r\n              value={verificationCode}\r\n              onChange={(e) => {\r\n                setVerificationCode(e.target.value);\r\n              }}\r\n            ></input>\r\n            <button\r\n              onClick={() => {\r\n                handleVerificationCode();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>{\" \"}\r\n          </div>\r\n        ) : !isLoading && errorMessage != null ? (\r\n          <div>{errorMessage} - Please try again later...</div>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\admin\\HandleShipmentsPage.js",["147","148","149","150"],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\components\\modal\\index.js",["151"],"import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { useRef, useState } from \"react\";\r\nimport useClickOuteside from \"./useClickOutside\";\r\n\r\nconst Modal = ({ children, isVisible, onClose }) => {\r\n  const modalRef = useRef();\r\n\r\n  useClickOuteside(modalRef, onClose);\r\n\r\n  if (!isVisible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"custom-overlay\">\r\n      <div ref={modalRef} className=\"custom-modal\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\pages\\admin\\EditShipmentModal.js",["152"],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\layouts\\PrivateLayout.js",[],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\api\\axios.js",[],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\api\\shipments.js",[],"C:\\Users\\Oscar\\Desktop\\programming\\boxinator-case\\frontend\\src\\App.js",["153"],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"158"},{"ruleId":"156","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":8,"column":10,"nodeType":"162","messageId":"163","endLine":8,"endColumn":24},{"ruleId":"160","severity":1,"message":"164","line":8,"column":26,"nodeType":"162","messageId":"163","endLine":8,"endColumn":36},{"ruleId":"160","severity":1,"message":"165","line":9,"column":10,"nodeType":"162","messageId":"163","endLine":9,"endColumn":19},{"ruleId":"160","severity":1,"message":"166","line":21,"column":21,"nodeType":"162","messageId":"163","endLine":21,"endColumn":33},{"ruleId":"160","severity":1,"message":"167","line":22,"column":17,"nodeType":"162","messageId":"163","endLine":22,"endColumn":22},{"ruleId":"160","severity":1,"message":"168","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":21},{"ruleId":"160","severity":1,"message":"168","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":21},{"ruleId":"160","severity":1,"message":"169","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":12},{"ruleId":"160","severity":1,"message":"170","line":16,"column":17,"nodeType":"162","messageId":"163","endLine":16,"endColumn":22},{"ruleId":"160","severity":1,"message":"171","line":21,"column":10,"nodeType":"162","messageId":"163","endLine":21,"endColumn":16},{"ruleId":"160","severity":1,"message":"172","line":23,"column":5,"nodeType":"162","messageId":"163","endLine":23,"endColumn":16},{"ruleId":"160","severity":1,"message":"173","line":67,"column":13,"nodeType":"162","messageId":"163","endLine":67,"endColumn":17},{"ruleId":"160","severity":1,"message":"170","line":4,"column":23,"nodeType":"162","messageId":"163","endLine":4,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":48,"column":8,"nodeType":"176","endLine":48,"endColumn":10,"suggestions":"177"},{"ruleId":"160","severity":1,"message":"165","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":19},{"ruleId":"160","severity":1,"message":"178","line":17,"column":9,"nodeType":"162","messageId":"163","endLine":17,"endColumn":20},{"ruleId":"160","severity":1,"message":"179","line":21,"column":7,"nodeType":"162","messageId":"163","endLine":21,"endColumn":22},{"ruleId":"160","severity":1,"message":"180","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"171","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":23},{"ruleId":"154","replacedBy":"181"},{"ruleId":"156","replacedBy":"182"},{"ruleId":"160","severity":1,"message":"183","line":8,"column":10,"nodeType":"162","messageId":"163","endLine":8,"endColumn":25},{"ruleId":"174","severity":1,"message":"184","line":40,"column":6,"nodeType":"176","endLine":40,"endColumn":8,"suggestions":"185"},{"ruleId":"160","severity":1,"message":"186","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":22},{"ruleId":"160","severity":1,"message":"179","line":15,"column":7,"nodeType":"162","messageId":"163","endLine":15,"endColumn":22},{"ruleId":"160","severity":1,"message":"187","line":17,"column":10,"nodeType":"162","messageId":"163","endLine":17,"endColumn":18},{"ruleId":"160","severity":1,"message":"188","line":17,"column":20,"nodeType":"162","messageId":"163","endLine":17,"endColumn":31},{"ruleId":"174","severity":1,"message":"189","line":27,"column":6,"nodeType":"176","endLine":27,"endColumn":8,"suggestions":"190"},{"ruleId":"160","severity":1,"message":"168","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":21},{"ruleId":"160","severity":1,"message":"191","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":15},{"ruleId":"174","severity":1,"message":"192","line":39,"column":5,"nodeType":"176","endLine":39,"endColumn":7,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":74,"column":19,"nodeType":"196","endLine":74,"endColumn":31},{"ruleId":"160","severity":1,"message":"197","line":3,"column":18,"nodeType":"162","messageId":"163","endLine":3,"endColumn":26},{"ruleId":"160","severity":1,"message":"198","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":16},{"ruleId":"160","severity":1,"message":"170","line":17,"column":23,"nodeType":"162","messageId":"163","endLine":17,"endColumn":28},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],["199"],["200"],"no-unused-vars","'getAllAccounts' is defined but never used.","Identifier","unusedVar","'createUser' is defined but never used.","'useEffect' is defined but never used.","'setIsLoading' is assigned a value but never used.","'login' is assigned a value but never used.","'PrivateLayout' is defined but never used.","'Form' is defined but never used.","'GUEST' is defined but never used.","'useRef' is defined but never used.","'appVerifier' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderUserDataWithAdminToken'. Either include it or remove the dependency array.","ArrayExpression",["201"],"'isFirstTime' is assigned a value but never used.","'captchaVerifier' is assigned a value but never used.","'React' is defined but never used.",["199"],["200"],"'getAllCountries' is defined but never used.","React Hook useEffect has a missing dependency: 'renderExampleDataWithToken'. Either include it or remove the dependency array.",["202"],"'ChromePicker' is defined but never used.","'phoneNbr' is assigned a value but never used.","'setPhoneNbr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSendPhoneVerification'. Either include it or remove the dependency array.",["203"],"'Sidebar' is defined but never used.","React Hook useEffect has a missing dependency: 'renderShipmentData'. Either include it or remove the dependency array.",["204"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [renderUserDataWithAdminToken]",{"range":"213","text":"214"},"Update the dependencies array to be: [renderExampleDataWithToken]",{"range":"215","text":"216"},"Update the dependencies array to be: [handleSendPhoneVerification]",{"range":"217","text":"218"},"Update the dependencies array to be: [renderShipmentData]",{"range":"219","text":"220"},[1560,1562],"[renderUserDataWithAdminToken]",[1158,1160],"[renderExampleDataWithToken]",[825,827],"[handleSendPhoneVerification]",[1214,1216],"[renderShipmentData]"]